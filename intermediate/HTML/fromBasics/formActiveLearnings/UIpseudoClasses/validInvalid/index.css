/* ############ CSS RESET STARTS ############# */
/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
}
/*
  3. Allow percentage-based heights in the application
*/
html,
body {
  height: 100%;
}
/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*
  7. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}
/*
  8. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
  9. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}
/* ############ CSS RESET ENDS ############# */

body {
  display: flex;
  justify-content: center;
  margin-top: 3rem;
}

form {
  width: 30rem;
}

p {
  text-align: center;
  font-size: small;
  font-style: italic;
  color: red;
  font-weight: bold;
  margin-bottom: 30px;
}

fieldset {
  position: relative;
  padding: 2rem 5rem;
  border-radius: 1rem;
  box-shadow: 4px 4px 3px #ccc;
}

fieldset > div {
  margin-bottom: 20px;
  display: flex;
  flex-flow: row wrap;
}

legend {
  position: absolute;
  bottom: 0;
  right: 0;
  background: black;
  color: white;
  font-weight: bold;
  padding: 0 0.5rem;
  border-radius: 0.5rem;
}

div {
  margin-top: 1rem;
}

label {
  width: 100%;
}

input {
  width: 100%;
  border-radius: 0.5rem;
}

input + span {
  position: relative;
}

input + span::before {
  position: absolute;
  right: -20px;
  top: 5px;
}

input:required + span::after {
  font-size: 0.7rem;
  position: absolute;
  content: "required";
  color: white;
  background: black;
  padding: 0 0.5rem;
  top: -23px;
  left: -60px;
  border-radius: 0.5rem;
}

label + input:invalid {
  border: 2px solid red;
}

label + input:valid {
  border: 2px solid green;
}

input:invalid + span::before {
  content: "✖";
  color: red;
}

input:valid + span::before {
  content: "✓";
  color: green;
}

input:required {
  border: 1px solid black;
}

input:optional {
  border: 1px solid silver;
}

input:out-of-range + span::after {
  color: white;
  background: red;
  width: 155px;
  content: "Outside allowable value range";
  left: -182px;
}

.button {
  display: flex;
  justify-content: center;
}

button {
  border-radius: 0.5rem;
  width: 15rem;
  padding: 0.215rem;
  border: none;
  background: #ccc;
  font-weight: bold;
  cursor: pointer;
}

button:hover {
  /* outline: 1px solid black; */
  background: black;
  color: white;
}
